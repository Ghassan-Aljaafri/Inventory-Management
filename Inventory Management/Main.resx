<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="StockOutBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        2AAAAdgB+lymcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQmSURBVHhe7Zdd
        S1RRFIb9EVG3Vj+hP1DNUDdKEFPQVUQ5Zl2UCEJQcayLoq4qjbAoL4o+CIIK1ArMaByJCL9KK0WFyjQw
        nZEgKnZn69qzP3yrNcc4w8ycFx5kz3nPXutd7M2MFStVOhvf2ZPdvIOW5aWXmY2rejKxz6lM7EvvQmwN
        fVw+6snE7/gDEIvMb75NH5eHUpn4tlx4RblcBXX03QHIq5DKbllNttKVdfRdSv0qwKPvkMrGEmQvLf3p
        6LuU7FWQxxsFRqTmY7fotdIQ5+i7lMxV4B59l5K5CvkcfZeivwpBjr5L0V6FoEffpWivgjy+KFAQ0vOx
        m7Rtceh/HH2XoroK6fl4fToTP43oycYmUcBF/GfonUX8PWn74pYftGtZcE0X2UpXMqQT2iQaANlYEg+S
        Yhnd9dPitSdydNdPQZ/pUYy1TItPD0SOsZYp5KPywSRDOqFNVj6Ap4fthuUa+UyPYvSCsAYg18BH5YNJ
        hnRCm0QDIBtLMFg0gGgAdsPRAMptAJ0HhXjeoJFr5APBxMgZ/6uvVSPXwEflg0mGdEKbrHwAXEAwLlQ+
        mGRIJ7RJNACysQSDcQHBuFD5YOqd27QhvRCPI+QzsrEEg3EBwbhQ+cILBuMCgnGh8oUXDMYFBONC5Qsv
        GIwLCMaFyhdeMBgXEIwLldcSA966ZYycXSum7lXmkGvXM3hyvZh+uG4ZE5fXimGvModcI1973U8fYdHh
        //B5dEgj165Hvtd39KfoPyYsBo7bYeXa9fjvUWwt6yXFaPOc/bOyeRb6TI9i/Oqc5Rm/Ngt9pkfx7rzt
        eXsO+9Cp6K63Pc/8NfBRbC3rJQXzd7XlUYy32R65Rj7To+DWBcG4/0dQbC3rJUU0gGgAgtWI6VFEA4gG
        YHuKcgDDp5aKK+Qa+cxmFR/uLoVWyDXyof24dUEw0XFgKbRCroGPYmvBAlxQMC5oPy4gGBeKrQULcEHB
        uKD9uIBgXCi2FizABQXjgvbjAoJxodhasAAXFIwL2o8LCMaFYmvBAlxQMC5oPy4gGBeKrQULcEHBuKD9
        uIBgXCi2FizABQXjgvbjAoJxodhasAAXFIwL2o8LCMaFYmvNvWjqm0l5bz8+8yYnuryZ0SdNmZFO78eb
        dk/8jfePT4g3z28EZujhEfHqXmPeDN33/17cy6L/Us2vwdZ934evJDNjbbXTH67XjlNsrWTSE4Vg69Zd
        BYFia6HmwgA1FwYUWws1FwaouTCg2FqouTBAzYUBxdZCzYUBai4MKLYWai4MUHNhQLG1UHNhgJoLA4qt
        VVPjxRXJZFMDalbT1GD688F/v8/cy2yqqmr3t0TiQGMQtm+vvW/u5SKfm36KjbV/v7fRbNJFPidr3vKH
        0GXuZTZZXb3nK9nyViJRd9jcy0U+J+u/FQ2gbAZQUfEbUV8Y5QDBgGMAAAAASUVORK5CYII=
</value>
  </data>
</root>